#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\input{../../Cours/Templates/macrosHyperlinkEnglish.tex}
\newcommand{\Dynela}{DynELA Finite Element Code}
\end_preamble
\options twoside
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding default
\fontencoding global
\font_roman "bookman" "default"
\font_sans "helvet" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 90 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 1.5cm
\bottommargin 2cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 4
\tocdepth 4
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Abaqus extractor utility
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
startcontents[chapters]
\end_layout

\begin_layout Plain Layout


\backslash
printmyminitoc
\end_layout

\end_inset


\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
LETTRINE{T}
\end_layout

\end_inset


\end_layout

\end_inset

his chapter deals about the Abaqus extractor utility of the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Dynela
\end_layout

\end_inset

.
 This extractor is a Python library used to extract results from an Abaqus
 odb datafileby reading a configuration file describing the way to produce
 those extracts from a simple syntax language.
 
\end_layout

\begin_layout Section
Introduction and presentation of the script
\end_layout

\begin_layout Standard
The 
\family sans
AbaqusExtract
\family default
 library is called from a Python script with the following minimal form.
\end_layout

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{PythonListing}
\end_layout

\begin_layout Plain Layout

# import the AbaqusExtract library
\end_layout

\begin_layout Plain Layout

import AbaqusExtract
\end_layout

\begin_layout Plain Layout

# Extract data using datafile Extract.ex
\end_layout

\begin_layout Plain Layout

AbaqusExtract.AbaqusExtract('Extract.ex')
\end_layout

\begin_layout Plain Layout


\backslash
end{PythonListing}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Assuming that the Python script containing this piece of code is named 
\family sans
'Extract.py'
\family default
, therefore this script must be called from the Abaqus main program using
 the following command: 
\end_layout

\begin_layout Standard

\family sans
abaqus python Extract.py
\end_layout

\begin_layout Section
Syntax of the configuration file
\end_layout

\begin_layout Standard
Different forms are used depending on the nature of the data to extract,
 but everything conforms to the Abaqus Python command syntax.
 The 
\family sans
AbaqusExtract
\family default
 library uses some keywords to define the nature of the data to extract
 as proposed here after.
\end_layout

\begin_layout Itemize

\family sans
TimeHistory
\family default
: is a keyword defining that the line contains the instructions to extract
 a time history from an Abaqus 
\family sans
odb
\family default
 file.
\end_layout

\begin_layout Itemize

\family sans
job
\family default
: is used to define the name of the odb file to use for the extraction of
 the results 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ie
\end_layout

\end_inset

 it's the name of the 
\family sans
odb
\family default
 file without the extension 
\family sans
.odb
\family default
.
\end_layout

\begin_layout Itemize

\family sans
value
\family default
: is the nature of the variable to extract conforming to the variables names
 of Abaqus.
\end_layout

\begin_layout Itemize

\family sans
name
\family default
: is the given name of the plotting file to generate, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ie
\end_layout

\end_inset

 the name of the plotting file without the 
\family sans
.plot
\family default
 extension.
\end_layout

\begin_layout Itemize

\family sans
region
\family default
: is used to define the location of the data to extract.
 This one is more complex, as it can be a global location, a node location
 or an integration point location as described hereafter.
\end_layout

\begin_layout Itemize

\family sans
operate
\family default
: is an optional parameter defining what to do when multiple regions are
 defined.
\end_layout

\begin_layout Standard
As an example, the following piece of code gives some application examples.
\end_layout

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{PythonListing}
\end_layout

\begin_layout Plain Layout

# Extraction of a time history node data
\end_layout

\begin_layout Plain Layout

TimeHistory, job=Torus, value=U1, name=dispX, region=Node SQUARE-1.3
\end_layout

\begin_layout Plain Layout

# Extraction of a time history integration point data
\end_layout

\begin_layout Plain Layout

TimeHistory, job=Torus, value=MISES, name=vonMises, region=Element SQUARE-1.1
 Int Point 1
\end_layout

\begin_layout Plain Layout

# Extraction of a time history global variable
\end_layout

\begin_layout Plain Layout

TimeHistory, job=Torus, value=DT, name=timeStep, region=Assembly ASSEMBLY
\end_layout

\begin_layout Plain Layout


\backslash
end{PythonListing}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the previous example:
\end_layout

\begin_layout Itemize
line 
\begin_inset Formula $2$
\end_inset

 is used to extract the nodal displacement 
\family sans
U1
\family default
 from the odb file 
\family sans
Torus.odb
\family default
 and produce the 
\family sans
dispX.plot
\family default
 file for node 
\begin_inset Formula $3$
\end_inset

 of the 
\family sans
SQUARE-1
\family default
 piece.
\end_layout

\begin_layout Itemize
line 
\begin_inset Formula $4$
\end_inset

 is used to extract the integration point value 
\family sans
MISES
\family default
 from the odb file 
\family sans
Torus.odb
\family default
 and produce the 
\family sans
vonMises.plot
\family default
 file for integration point 
\begin_inset Formula $1$
\end_inset

 of element 
\begin_inset Formula $1$
\end_inset

 of the 
\family sans
SQUARE-1
\family default
 piece.
\end_layout

\begin_layout Itemize
line 
\begin_inset Formula $6$
\end_inset

 is used to extract the global timestep 
\family sans
DT
\family default
 from the odb file 
\family sans
Torus.odb
\family default
 and produce the 
\family sans
timeStep.plot
\family default
 file.
\end_layout

\begin_layout Standard
Concerning the definition of the region to use, it is possible to define
 more than 
\begin_inset Formula $1$
\end_inset

 region by using the 
\family sans
'+'
\family default
 sign in the definition of the region.
 When this is used, the optional parameter operate is used to define what
 to do with this multiple data.
 The operation is defined by:
\end_layout

\begin_layout Itemize

\family sans
operate = none
\family default
: or no operate parameter defined, therefore, all values are reported to
 the plotting file separated by a white space.
\end_layout

\begin_layout Itemize

\family sans
operate = mean
\family default
: the mean value is computed and reported to the plotting file.
\end_layout

\begin_layout Itemize

\family sans
operate = sum
\family default
: the sum of the values is computed and reported to the plotting file.
\end_layout

\end_body
\end_document
